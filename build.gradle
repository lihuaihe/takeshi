plugins {
    id 'java'
    id 'java-library'
    id 'signing'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

group = 'life.725'
version = '1.0.12.25-SNAPSHOT'
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

ext {
    mavenUsername = project.findProperty('mavenUsername')
    mavenPassword = project.findProperty('mavenPassword')
}

javadoc.options.encoding = 'UTF-8'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile).tap {
    configureEach {
        options.encoding = 'UTF-8'
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

// 不生成可运行的jar包
bootJar.enabled = false

jar {
    enabled = true
    archiveClassifier = ''
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'takeshi'
                description = '一个集成了各种库的，可以快速构建SpringBoot项目框架的库，GitHub地址：https://github.com/lihuaihe/takeshi'
                url = 'https://github.com/lihuaihe/takeshi'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = '七濑武【Nanase Takeshi】'
                        email = 'takeshi@725.life'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/lihuaihe/takeshi.git'
                    developerConnection = 'scm:git:ssh://github.com/lihuaihe/takeshi.git'
                    url = 'https://github.com/lihuaihe/takeshi'
                }
            }
        }
    }
    repositories {
        maven {
            if (project.version.toString().endsWith("-SNAPSHOT")) {
                url = "https://s01.oss.sonatype.org/content/repositories/snapshots"
            } else {
                url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            credentials {
                username = mavenUsername
                password = mavenPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-aop'
    api 'org.springframework.boot:spring-boot-starter-data-redis'
    api 'org.springframework.boot:spring-boot-starter-validation'
    api 'org.springframework.boot:spring-boot-starter-thymeleaf'
    api 'org.springframework.retry:spring-retry'
    api 'org.redisson:redisson-spring-boot-starter:3.21.0'
    api 'org.xhtmlrenderer:flying-saucer-pdf-itext5:9.1.22'
    api 'org.apache.tika:tika-core:2.7.0'

//     javacv 和 ffmpeg-platform
    api 'org.bytedeco:ffmpeg:6.0-1.5.9:macosx-x86_64'
    api 'org.bytedeco:ffmpeg:6.0-1.5.9:windows-x86_64'
    api 'org.bytedeco:ffmpeg:6.0-1.5.9:linux-x86_64'
    api 'org.bytedeco:javacv:1.5.9'

    api 'org.locationtech.jts:jts-core:1.19.0'

    api 'com.baomidou:mybatis-plus-boot-starter:3.5.3.1'
    api 'com.github.xiaoymin:knife4j-openapi3-jakarta-spring-boot-starter:4.1.0'
    api 'com.amazonaws:aws-java-sdk-s3:1.12.476'
    api 'com.amazonaws:aws-java-sdk-secretsmanager:1.12.476'
    api 'com.mandrillapp.wrapper.lutung:lutung:0.0.8'
    api 'com.google.firebase:firebase-admin:9.1.1'
    api 'com.google.code.findbugs:annotations:3.0.1'
    api 'com.googlecode.libphonenumber:libphonenumber:8.13.8'

    api 'cn.hutool:hutool-all:5.8.18'
    api 'cn.dev33:sa-token-spring-boot3-starter:1.34.0'
    api 'cn.dev33:sa-token-dao-redis-jackson:1.34.0'

    api 'ognl:ognl:3.3.4'
    api 'io.netty:netty-all:4.1.93.Final'
    // 使用S3时提示：JAXB is unavailable. Will fallback to SDK implementation which may be less performant.If you are using Java 9+, you will need to include javax.xml.bind:jaxb-api as a dependency.
    api 'javax.xml.bind:jaxb-api:2.3.1'

    implementation 'com.twilio.sdk:twilio:9.5.0'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor 'net.dreamlu:mica-auto:3.0.1'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

}
